[tool.poetry]
name = "awswrangler"
version = "3.7.1"
description = "Pandas on AWS."
authors = ["Amazon Web Services"]
license = "Apache License 2.0"

readme = "README.md"

include = ["awswrangler/py.typed"]

exclude = ["*.so", "*.pyc", "*~", "#*", ".git*", ".coverage*", "DS_Store", "__pycache__"]

homepage = "https://aws-sdk-pandas.readthedocs.io/"
repository = "https://github.com/aws/aws-sdk-pandas"
documentation = "https://aws-sdk-pandas.readthedocs.io/"

keywords = ["pandas", "aws"]

classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = ">=3.8, <4.0"

# Required
boto3 = "^1.20.32"
botocore = "^1.23.32"
pandas = [
    { version = ">=1.2.0,<2.1.0", markers = "python_version < \"3.9\"" },
    { version = ">=1.2.0,<3.0.0", markers = "python_version >= \"3.9\"" },
]
numpy = [
    {version = "^1.18", markers = "python_version < \"3.12\""},
    {version = "^1.26", markers = "python_version >= \"3.12\""}
]
pyarrow = ">=8.0.0"
typing-extensions = "^4.4.0"
packaging = ">=21.1,<24.0"

# needed because Py 3.12 removed distutils, which some libraries still need
setuptools = {version = "*", markers = "python_version >= \"3.12\""}

# Databases
redshift-connector = { version = "^2.0.0", optional = true }
pymysql = { version = "^1.0.0", optional = true }
pg8000 = { version = "^1.29.0", optional = true }
pyodbc = { version = ">=4,<6", optional = true }
oracledb = { version = ">=1,<3", optional = true }

# Graph
gremlinpython = { version = "^3.7.1", optional = true }
SPARQLWrapper = { version = "^2.0.0", optional = true }
requests = { version = "^2.0.0", optional = true }
aiohttp = { version = "^3.9.0", optional = true }
async-timeout = { version = "^4.0.3", optional = true }

# OpenSearch
opensearch-py = { version = "^2.0.0", optional = true }
requests-aws4auth = { version = "^1.1.1", optional = true }
jsonpath-ng = { version = "^1.5.3", optional = true }

# Other
openpyxl = { version = "^3.0.0", optional = true }
progressbar2 = { version = "^4.0.0", optional = true }
deltalake = { version = ">=0.6.4,<0.16.0", optional = true }
geopandas = [
    { version = "^0.13.2", markers = "python_version < \"3.12\"", optional = true },
    { version = "^0.14.1", markers = "python_version >= \"3.12\"", optional = true }
]

# Distributed
modin = [
    { version = "0.23.1post0", markers = "python_version < \"3.9\"", optional = true },
    { version = "^0.26.0", markers = "python_version >= \"3.9\"", optional = true }
]
ray = { version = "^2.9.0", extras = ["default", "data"], optional = true }

[tool.poetry.extras]
redshift = ["redshift-connector"]
mysql = ["pymysql"]
postgres = ["pg8000"]
sqlserver = ["pyodbc"]
oracle = ["oracledb"]
gremlin = ["gremlinpython", "requests", "aiohttp", "async-timeout"]
sparql = ["SPARQLWrapper", "requests"]
opencypher = ["requests"]
opensearch = ["opensearch-py", "jsonpath-ng", "requests-aws4auth"]
openpyxl = ["openpyxl"]
progressbar = ["progressbar2"]
deltalake = ["deltalake"]
geopandas = ["geopandas"]
modin = ["modin"]
ray = ["ray"]

[tool.poetry.dev-dependencies]
# Build
setuptools = "*"
wheel = "^0.42.0"
msgpack = "*"

# Lint
boto3-stubs = {version = "^1.34.44", extras = ["athena", "cleanrooms", "chime", "cloudwatch", "dynamodb", "ec2", "emr", "emr-serverless", "glue", "kms", "logs", "neptune", "opensearch", "opensearchserverless", "quicksight", "rds", "rds-data", "redshift", "redshift-data", "s3", "secretsmanager", "ssm", "sts", "timestream-query", "timestream-write"]}
doc8 = "^1.0"
mypy = "^1.8"
ruff = "^0.2.2"

# Test
moto = "^5.0"
openpyxl = "^3.0"
pyparsing = "^3.0.7"
pytest = "^8.0.1"
pytest-cov = "^4.0"
pytest-rerunfailures = "^13.0"
pytest-timeout = "^2.1.0"
pytest-xdist = "^3.0.2"
s3fs = "0.4.2"  # Must be pinned to 0.4.2
tox = "^4.13.0"

# Docs
bump-my-version = "^0.17.4"
IPython = "^8.10.0"
jupyterlab = "^4.1"
nbsphinx = "^0.9.3"
nbsphinx-link = "^1.3.0"
sphinx = "^7.1"
sphinx-bootstrap-theme = "^0.8"
sphinx-copybutton = "^0.5.1"
pydot = "^2.0.0"
myst-parser = "^2.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extend-include = ["*.ipynb"]
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "venv",
]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = ["D", "E", "F", "I", "PL", "RUF100", "W", "FA", "UP", "PYI036"]
ignore = ["E501", "PLR2004", "UP037"]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["D"]
"test_infra/*" = ["D"]
"tests/*" = ["PL", "D"]
"tutorials/*" = ["D", "E402", "F401", "F811", "F821"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
max-args=25  # Maximum number of arguments for function / method.
max-bool-expr=5  # Maximum number of boolean expressions in an if statement (see R0916).
max-branches=15  # Maximum number of branch for function / method body.
max-locals=30  # Maximum number of locals for function / method body.
max-public-methods=20  # Maximum number of public methods for a class (see R0904).
max-returns=6  # Maximum number of return / yield for function / method body.
max-statements=50  # Maximum number of statements in function / method body.

[tool.mypy]
python_version = "3.8"
strict = true
ignore_missing_imports = true
warn_unused_ignores = true

[tool.pytest.ini_options]
log_cli = false
filterwarnings = "ignore::DeprecationWarning"
addopts = "--log-cli-format \"[%(name)s][%(funcName)s] %(message)s\" --verbose --capture=sys"
markers = [
    "distributed: tests againsts methods with distributed functionality",
]

[tool.coverage.run]
branch = true
omit = [
    "awswrangler/distributed/*",
    "awswrangler/neptune/_utils.py",
    "awswrangler/opensearch/_utils.py",
    "awswrangler/chime.py",
]

[tool.coverage.report]
show_missing = true
