[project]
name = "awswrangler"
version = "3.12.1"
description = "Pandas on AWS."
authors = [{ name = "Amazon Web Services" }]
requires-python = ">=3.9, <4.0"
readme = "README.md"
license = {text = "Apache-2.0"}
license-files = ["LICENSE.txt", "NOTICE.txt" ]
keywords = [
    "pandas",
    "aws",
]
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "boto3>=1.20.32,<2",
    "botocore>=1.23.32,<2",
    "pandas>=1.2.0,<3.0.0",
    "numpy>=1.26,<3.0",
    "pyarrow>=18.0.0,<21.0.0 ; sys_platform != 'darwin' or platform_machine != 'x86_64'",
    # pyarrow 18 causes macos build failures
    # https://github.com/ray-project/ray/pull/48446
    "pyarrow>=8.0.0,<18.0.0 ; sys_platform == 'darwin' and platform_machine == 'x86_64'",
    "typing-extensions>=4.4.0,<5",
    "packaging>=21.1,<26.0",
    "setuptools ; python_version >= '3.12'",
]

[project.optional-dependencies]
redshift = ["redshift-connector>=2.0.0,<3"]
mysql = ["pymysql>=1.0.0,<2"]
postgres = ["pg8000>=1.29.0,<2"]
sqlserver = ["pyodbc>=4,<6"]
oracle = ["oracledb>=1,<4"]
gremlin = [
    "gremlinpython>=3.7.1,<4",
    "requests>=2.0.0,<3",
    "aiohttp>=3.9.0,<4",
    "async-timeout>=4.0.3,<6.0.0",
]
sparql = [
    "SPARQLWrapper>=2.0.0,<3",
    "requests>=2.0.0,<3",
]
opencypher = ["requests>=2.0.0,<3"]
opensearch = [
    "opensearch-py>=2.0.0,<3",
    "jsonpath-ng>=1.5.3,<2",
    "requests-aws4auth>=1.1.1,<2",
]
openpyxl = ["openpyxl>=3.0.0,<4"]
progressbar = ["progressbar2>=4.0.0,<5"]
deltalake = ["deltalake>=0.18.0,<1.1.0"]
geopandas = ["geopandas>=1.0.0,<2"]
modin = ["modin>=0.31,<0.34"]
ray = ["ray[default, data]>=2.45.0,<3"]

[project.urls]
Homepage = "https://aws-sdk-pandas.readthedocs.io/"
Repository = "https://github.com/aws/aws-sdk-pandas"
Documentation = "https://aws-sdk-pandas.readthedocs.io/"

[dependency-groups]
dev = [
    "pip",
    "setuptools",
    "wheel>=0.45.1,<0.46",
    "msgpack",
    "boto3-stubs[athena, cleanrooms, chime, cloudwatch, dynamodb, ec2, emr, emr-serverless, glue, kms, logs, neptune, opensearch, opensearchserverless, quicksight, rds, rds-data, redshift, redshift-data, s3, secretsmanager, ssm, sts, timestream-query, timestream-write]>=1.36.2,<2",
    "doc8~=1.1",
    "mypy~=1.14",
    "ruff>=0.9.2,<0.12.0",
    "moto~=5.0",
    "openpyxl~=3.1",
    "pyparsing>=3.2.1,<4",
    "pytest>=8.3.4,<9",
    "pytest-cov~=6.0",
    "pytest-rerunfailures~=15.0",
    "pytest-timeout>=2.3.1,<3",
    "pytest-xdist>=3.6.1,<4",
    "s3fs==0.4.2",
    "tox>=4.23.2,<5",
    "bump-my-version>=0.29,<1.3",
    "IPython>=8.18.1,<9",
    "jupyterlab~=4.3",
    "nbsphinx>=0.9.6,<0.10",
    "nbsphinx-link>=1.3.1,<2",
    "sphinx~=7.1",
    "sphinx-autodoc-typehints>=2.0.1,<3",
    "sphinx-bootstrap-theme>=0.8,<0.9",
    "sphinx-copybutton>=0.5.1,<0.6",
    "pydot>=3.0.3,<4",
    "myst-parser>=3.0.1,<4",
]

[tool.hatch.build.targets.sdist]
include = ["awswrangler"]
exclude = [
    "*.so",
    "*.pyc",
    "*~",
    "#*",
    ".git*",
    ".coverage*",
    "DS_Store",
    "__pycache__",
]

[tool.hatch.build.targets.wheel]
include = ["awswrangler"]
exclude = [
    "*.so",
    "*.pyc",
    "*~",
    "#*",
    ".git*",
    ".coverage*",
    "DS_Store",
    "__pycache__",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
extend-include = ["*.ipynb"]
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "venv",
]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = ["D", "E", "F", "I", "PL", "RUF100", "W", "FA", "UP", "PYI036", "NPY"]
ignore = ["E501", "PLR2004", "UP037"]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["D"]
"test_infra/*" = ["D"]
"tests/*" = ["PL", "D"]
"tutorials/*" = ["D", "E402", "F401", "F811", "F821"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
max-args=25  # Maximum number of arguments for function / method.
max-bool-expr=5  # Maximum number of boolean expressions in an if statement (see R0916).
max-branches=15  # Maximum number of branch for function / method body.
max-locals=30  # Maximum number of locals for function / method body.
max-public-methods=20  # Maximum number of public methods for a class (see R0904).
max-returns=6  # Maximum number of return / yield for function / method body.
max-statements=50  # Maximum number of statements in function / method body.

[tool.mypy]
python_version = "3.9"
strict = true
ignore_missing_imports = true
warn_unused_ignores = true

[tool.pytest.ini_options]
log_cli = false
filterwarnings = "ignore::DeprecationWarning"
addopts = "--log-cli-format \"[%(name)s][%(funcName)s] %(message)s\" --verbose --capture=sys"
markers = [
    "distributed: tests againsts methods with distributed functionality",
]

[tool.coverage.run]
branch = true
omit = [
    "awswrangler/distributed/*",
    "awswrangler/neptune/_utils.py",
    "awswrangler/opensearch/_utils.py",
    "awswrangler/chime.py",
]

[tool.coverage.report]
show_missing = true
