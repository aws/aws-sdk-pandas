[tool.poetry]
name = "awswrangler"
version = "2.16.0"
description = "Pandas on AWS."
authors = ["Igor Tavares"]
license = "Apache License 2.0"

readme = "README.md"

include = ["README.md", "LICENSE.txt", "NOTICE.txt", "THIRD_PARTY.txt", "awswrangler/py.typed"]

exclude = ["*.so", "*.pyc", "*~", "#*", ".git*", ".coverage*", "DS_Store", "__pycache__"]

homepage = "https://aws-data-wrangler.readthedocs.io/"
repository = "https://github.com/awslabs/aws-data-wrangler"
documentation = "https://aws-data-wrangler.readthedocs.io/"

keywords = ["pandas", "aws"]

classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = ">=3.7.1, <3.11"

boto3 = "^1.20.17"
botocore = "^1.23.17"
pandas = "^1.2.0"
numpy = "^1.21.0"
pyarrow = ">=2.0.0, <7.1.0"
redshift-connector = "~2.0.889"
pymysql = "^1.0.0"
pg8000 = "^1.20.0"
openpyxl = "~3.0.0"
requests-aws4auth = "^1.1.1"
jsonpath-ng = "^1.5.3"
progressbar2 = "^4.0.0"
opensearch-py = "^1.0.0"
gremlinpython = "^3.5.2"
backoff = ">=1.11.1,<3.0.0"
SPARQLWrapper = { version = "^1.8.5", optional = true }
pyodbc = { version = "~4.0.32", optional = true }
oracledb = { version = "~1.0.0", optional = true }

[tool.poetry.extras]
sqlserver = ["pyodbc"]
oracle = ["oracledb"]
sparql = ["SPARQLWrapper"]

[tool.poetry.dev-dependencies]
wheel = "^0.36.2"
isort = "^5.9.2"
black = "^22.1.0"
pylint = "^2.11.1"
flake8 = "^4.0.0"
mypy = "^0.960"
pydocstyle = "^6.1.1"
doc8 = "^0.11.1"
tox = "^3.24.4"
pytest = "^7.0.0"
pytest-cov = "^3.0.0"
pytest-rerunfailures = "^10.2"
pytest-xdist = "^2.4.0"
pytest-timeout = "^2.0.1"
pydot = "^1.4.2"
sphinx = "^4.2.0"
sphinx-bootstrap-theme = "^0.8.0"
nbsphinx = "^0.8.8"
nbsphinx-link = "^1.3.0"
IPython = "^7.34.0"
moto = "^3.1.14"
jupyterlab = "^3.1.4"
s3fs = "0.4.2"
python-Levenshtein = "^0.12.2"
bump2version = "^1.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py37", "py38", "py39", "py310"]
extend_exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.env
  | _build
  | buck-out
  | build
  | dist
  | .vscode
  | dev
  | .coverage
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
src_paths = ["awswrangler"]
py_version = 38
skip_gitignore = true

[tool.mypy]
python_version = 3.8
strict = true
ignore_missing_imports = true
warn_unused_ignores = false

[tool.pytest.ini_options]
log_cli = false
filterwarnings = "ignore::DeprecationWarning"
addopts = "--log-cli-format \"[%(name)s][%(funcName)s] %(message)s\" --verbose --capture=sys"
